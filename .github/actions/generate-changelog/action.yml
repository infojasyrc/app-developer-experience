name: Generate Project Changelog

description: Generate and commit changelog for a specific project

inputs:
  working-directory:
    description: Path to the project
    required: true
  npm-script:
    description: The npm script to generate the changelog
    required: true
  project-name:
    description: Name of the project
    required: true
  version:
    description: Version tag to create GitHub release (optional)
    required: false

runs:
  using: composite
  steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install deps
      run: npm install
      shell: bash

    - name: Generate changelogs
      run: |
        npm run ${{ inputs.npm-script }} || echo "No changelog script for ${{ inputs.npm-script }}"
      shell: bash

    - name: Commit changelogs
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions@users.noreply.github.com"
        git remote set-url origin https://x-access-token:${{ env.GH_PAT }}@github.com/${{ github.repository }}.git
        git add CHANGELOG.md
        git commit -m "docs(${{ inputs.project-name }}): update changelog" || echo "No changes"
        git push origin HEAD
      shell: bash
      env:
        GH_PAT: ${{ env.GH_PAT }}
      working-directory: ${{ inputs.working-directory }}

    - name: 📦 Create GitHub release
      if: ${{ inputs.version != '' }}
      run: |
        # Define tag and filenames
        TAG="${{ inputs.project-name }}-v${{ inputs.version }}"
        ARCHIVE_NAME="${{ inputs.project-name }}-${{ inputs.version }}"

        # Create archive with only the project contents
        zip -r "../${ARCHIVE_NAME}.zip" . > /dev/null
        tar -czf "../${ARCHIVE_NAME}.tar.gz" . > /dev/null

        # Create the release and attach only the scoped archive
        gh release create $TAG \
          --title "$TAG" \
          --notes-file CHANGELOG.md
          --verify-tag \
          "../${ARCHIVE_NAME}.zip" "../${ARCHIVE_NAME}.tar.gz"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
      working-directory: ${{ inputs.working-directory }}