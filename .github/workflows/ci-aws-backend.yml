# ---
# name: Build and Deploy to AWS

# on:
#   push:
#     branches:
#       - main # Set this to your default branch
#     paths:
#       - 'backend/project/src/**'
#       - 'backend/project/Dockerfile'
#       - 'backend/project/*.js'
#       - 'backend/project/*.json'

# permissions:
#   contents: read

# env:
#   ECS_SERVICE: backend-service
#   ECS_CLUSTER: cluster-app
#   ECS_TASK_DEFINITION: backend-image
#   CONTAINER_NAME: backend-image

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
#           aws-region: us-east-1

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v2

#       - name: Build, tag, and push docker image to Amazon ECR
#         id: build-image
#         env:
#           REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           REPOSITORY: ${{ env.CONTAINER_NAME}}
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           cd backend
#           docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
#           docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
#           echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

#       - name: Download task definition
#         run: |
#           aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} --query taskDefinition > task-definition.json
#           echo $(cat task-definition.json | jq 'del(
#                     .taskDefinitionArn,
#                     .requiresAttributes,
#                     .compatibilities,
#                     .revision,
#                     .status,
#                     .registeredAt,
#                     .registeredBy
#                 )') > task-definition.json
#           cat task-definition.json

#       - name: Fill in the new image ID in the Amazon ECS task definition
#         id: task-def
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: task-definition.json
#           container-name: ${{ env.CONTAINER_NAME }}
#           image: ${{ steps.build-image.outputs.image }}

#       - name: Deploy Amazon ECS task definition
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.task-def.outputs.task-definition }}
#           service: ${{ env.ECS_SERVICE }}
#           cluster: ${{ env.ECS_CLUSTER }}
#           wait-for-service-stability: true
#           force-new-deployment: true
