name: Pull Request Verification Workflow

permissions:
  contents: read

on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - conference-api/**
      - conference-webapp/**
      - conference-admin/**
    paths:
      - conference-manager/**
      - backend/**

env:
  # common variables
  PLATFORM: linux/amd64
  # variables for fastapi rest template
  FASTAPI_REST_TPL_IMAGE_NAME: kpis-monitoring-system

jobs:
  get-changed-packages:
    name: Get list of changed packages
    runs-on: ubuntu-22.04
    outputs:
      changed_packages: ${{ steps.changed-packages.outputs.changed_packages }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: changed-packages
        uses: ./.github/actions/get-changed-packages
      - name: Output changed packages
        run: |
          echo "Changed packages: ${{ steps.changed-packages.outputs.changed_packages }}"

  verify-fastapi-rest-tpl:
    name: verify fastapi rest template
    needs: get-changed-packages
    if: ${{ contains(needs.get-changed-packages.outputs.changed_packages, 'backend/ms-fastapi-rest-tpl') }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./backend/ms-fastapi-rest-tpl
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3

      - name: Build container image
        run: |
          docker build --target base -t ${{ env.FASTAPI_REST_TPL_IMAGE_NAME }} -f Dockerfile .

      - name: Install dependencies
        run: |
          docker run --rm --workdir=/app \
            --platform ${{ env.PLATFORM }} \
            -v $(pwd):/app \
            -v /app/.venv \
            -v ${{ env.FASTAPI_REST_TPL_IMAGE_NAME }}-packages:/app/.venv \
            ${{ env.FASTAPI_REST_TPL_IMAGE_NAME }} bash -c "poetry lock && poetry install --with dev"

      - name: Run tests
        run: |
          cd kpis-monitoring-system
          docker run --rm --workdir=/app \
            --platform ${{ env.PLATFORM }} \
            -v $(pwd):/app \
            -v /app/.venv \
            -v ${{ env.FASTAPI_REST_TPL_IMAGE_NAME }}-packages:/app/.venv \
            ${{ env.FASTAPI_REST_TPL_IMAGE_NAME }} bash -c "poetry run pytest"

  verify-conference-webapp:
    name: verify conference manager webapp
    needs: get-changed-packages
    if: ${{ contains(needs.get-changed-packages.outputs.changed_packages, 'conference-manager/ms-conference-webapp') }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./conference-manager/ms-conference-webapp
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          check-latest: true
        id: nvm

      - name: Set up Node.js using .nvmrc
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
          node_version=$(cat .nvmrc)
          nvm install $node_version
          nvm use $node_version
        shell: bash

      - name: Install dependencies
        if: startsWith(github.head_ref, 'feat/') || startsWith(github.head_ref, 'fix/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'refactor/')
        run: |
          npm install

      - name: Run Linting
        if: startsWith(github.head_ref, 'feat/') || startsWith(github.head_ref, 'fix/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'refactor/')
        continue-on-error: true
        run: |
          npm run lint

      - name: Run Unit Tests
        if: startsWith(github.head_ref, 'feat/') || startsWith(github.head_ref, 'fix/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'refactor/')
        run: |
          npm run test:ci

  verify-conference-api:
    name: verify conference manager api
    needs: get-changed-packages
    if: ${{ contains(needs.get-changed-packages.outputs.changed_packages, 'conference-manager/ms-conference-api') }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./conference-manager/ms-conference-api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          check-latest: true
          cache: yarn

      - name: Install dependencies
        if: startsWith(github.head_ref, 'feat/') || startsWith(github.head_ref, 'fix/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'refactor/')
        run: |
          yarn install

      - name: Run Linting
        if: startsWith(github.head_ref, 'feat/') || startsWith(github.head_ref, 'fix/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'refactor/')
        continue-on-error: true
        run: |
          yarn lint

      - name: Run Unit Tests
        if: startsWith(github.head_ref, 'feat/') || startsWith(github.head_ref, 'fix/') || startsWith(github.head_ref, 'hotfix/') || startsWith(github.head_ref, 'refactor/')
        run: |
          yarn run test:unit-tests:v2
