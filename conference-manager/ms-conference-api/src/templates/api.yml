openapi: 3.0.0
info:
  title: Events API
  description: API chupitos
  version: 1.0.0
servers:
  - url: 'http://localhost:5002'
    description: localhost url

tags:
  - name: events
    description: all events endpoints.
    x-displayName: events
  - name: users
    description: all users endpoints.
    x-displayName: users
x-tagGroups:
  - firstName: events
    tags:
      - events

paths:
  /v1/users:
    get:
      summary: Retrieves events with registration status
      tags:
        - users
      responses:
        '200':
          description: return all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
        '500':
          description: error given when an unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internal_server_error:
                  value:
                    status: 500
                    message: Internal server error
    post:
      summary: Create a new user
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Users'
      responses:
        '200':
          description: Return a new user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
        '401':
          description: error given when the user is not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        '422':
          description: error given when some parameter is wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unprocessable_entity:
                  value:
                    status: 422
                    message: Unprocessable Entity
        '500':
          description: error given when an unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internal_server_error:
                  value:
                    status: 500
                    message: Internal server error
  /v1/events:
    get:
      summary: Return all events
      tags:
        - events
      responses:
        '200':
          description: return an array with all events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Events'
        '500':
          description: error given when an unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internal_server_error:
                  value:
                    status: 500
                    message: Internal server error
    post:
      summary: Create a new event
      tags:
        - events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Events'
      responses:
        '200':
          description: Return a new event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Events'
        '401':
          description: error given when the user is not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        '422':
          description: error given when some parameter is wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unprocessable_entity:
                  value:
                    status: 422
                    message: Unprocessable Entity
        '500':
          description: error given when an unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internal_server_error:
                  value:
                    status: 500
                    message: Internal server error
  /v1/events/{eventId}:
    get:
      summary: Return event with Id
      tags:
        - events
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
          description: the event id
      responses:
        '200':
          description: return event
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Events'
        '404':
          description: error given when an event does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                event_not_found:
                  value:
                    status: 404
                    message: Event not found
        '500':
          description: error given when an unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internal_server_error:
                  value:
                    status: 500
                    message: Internal server error
    put:
      summary: Update event
      tags:
        - events
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
          description: the event id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Events'
      responses:
        '200':
          description: Return a new event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Events'
        '404':
          description: error given when an event does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                event_not_found:
                  value:
                    status: 404
                    message: Event not found
        '401':
          description: error given when the user is not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        '422':
          description: error given when when some parameter is wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unprocessable_entity:
                  value:
                    status: 422
                    message: Unprocessable Entity
        '500':
          description: error given when an unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internal_server_error:
                  value:
                    status: 500
                    message: Internal server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Users:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        isAdmin:
          type: boolean
        isSuperAdmin:
          type: boolean
        role:
          type: string
        uid:
          type: string
    ErrorResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
    Events:
      type: object
      properties:
        address:
          type: string
        eventData:
          type: string
        name:
          type: string
        status:
          type: string
        year:
          type: string
      required:
        - name
        - status
        - evenData
        - year
        - address
